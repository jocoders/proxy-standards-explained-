# Proxy Contract Questions and Answers

## ‚úÖ If a proxy calls an implementation, and the implementation self-destructs in the function that gets called, what happens?
- **Short Answer:** The proxy continues to work, as `selfdestruct` no longer removes contract code after Cancun (EIP-6780).
- **Explanation:**
  1. `selfdestruct` **does not remove** code if the contract was deployed in a previous transaction.
  2. Only **storage is cleared**, but `delegatecall` does not use implementation storage.
  3. The proxy still works, even if the implementation self-destructs.

## ‚úÖ If a proxy calls an empty address or an implementation that was previously self-destructed, what happens?
### 1Ô∏è‚É£ If the proxy calls `address(0)` or an address without code:
- `delegatecall` returns `false`.
- If `require(success)` is used, the call **reverts**.
- Otherwise, the call returns empty `bytes` (`0x`).

### 2Ô∏è‚É£ If the proxy calls a contract that previously self-destructed:
- After Cancun (EIP-6780), the contract **code remains**, but storage is cleared.
- `delegatecall` still works, but **storage-dependent data is reset to `0`**.

üìå **Conclusion:**
‚úÖ `delegatecall` to an empty address **fails**.  
‚úÖ `delegatecall` to a self-destructed contract **works**, but storage is reset.

## ‚úÖ If a user calls a proxy, which makes a delegatecall to A, and A makes a regular call to B, who is `msg.sender`?
- **A‚Äôs `msg.sender`** = Proxy  
- **B‚Äôs `msg.sender`** = Proxy  
- **Proxy‚Äôs `msg.sender`** = User  

üìå **Reason:** `delegatecall` keeps `msg.sender` unchanged, while a regular `call` sets `msg.sender` to the caller.

## ‚úÖ If a proxy makes a `delegatecall` to A, and A does `address(this).balance`, whose balance is returned?
- **Short Answer:** The proxy‚Äôs balance.
- **Explanation:** `delegatecall` executes in the proxy's context, so `address(this)` refers to the proxy.

## ‚úÖ If a proxy makes a `delegatecall` to A, and A calls `codesize`, what size is returned?
- **Short Answer:** The proxy‚Äôs code size.
- **Explanation:** Since `delegatecall` executes in the proxy's context, `codesize` checks the proxy‚Äôs bytecode.

## ‚úÖ If a `delegatecall` is made to a function that reverts, what happens?
- **Short Answer:** `delegatecall` returns `false`, and the transaction can revert if `require(success)` is used.
- **Explanation:**
  - `success = false`
  - `calldata = 0x`
  - Transaction **reverts** if not handled properly.

## ‚úÖ Under what conditions does OpenZeppelin `Proxy.sol` overwrite the free memory pointer? Why is it safe?
### 1Ô∏è‚É£ Where does `Proxy.sol` overwrite memory?
- Inside `_delegate(address implementation)`, OpenZeppelin uses **inline assembly**:
  

